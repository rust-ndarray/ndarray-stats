name: Continuous integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - 1.60.0  # MSRV
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Run tests with Rayon
        run: cargo test --verbose --features rayon

  cross_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # 64-bit, big-endian
          - rust: stable
            target: mips64-unknown-linux-gnuabi64
          # 32-bit, big-endian
          - rust: stable
            target: mips-unknown-linux-gnu
          # 32-bit, little-endian
          - rust: stable
            target: i686-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Install cross
        run: cargo install cross -f
      - name: Build
        run: cross build --verbose --target=${{ matrix.target }}
      - name: Run tests
        run: cross test --verbose --target=${{ matrix.target }}
      - name: Run tests with Rayon
        run: cross test --verbose --features rayon --target=${{ matrix.target }}

  format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt
      - name: Rustfmt
        run: cargo fmt -- --check

  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin -f
      - name: Generate code coverage
        run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
